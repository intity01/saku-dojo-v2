// Message Input Component\n// Text input with file upload and send functionality\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { cn } from '../../utils/cn';\n\nexport interface MessageInputProps {\n  onSendMessage: (content: string, type?: 'text' | 'file') => void;\n  onFileUpload: (files: File[]) => void;\n  disabled?: boolean;\n  placeholder?: string;\n  maxLength?: number;\n  allowFileUpload?: boolean;\n  allowedFileTypes?: string[];\n  maxFileSize?: number; // in bytes\n  className?: string;\n}\n\nconst MessageInput: React.FC<MessageInputProps> = ({\n  onSendMessage,\n  onFileUpload,\n  disabled = false,\n  placeholder = 'พิมพ์ข้อความ...',\n  maxLength = 1000,\n  allowFileUpload = true,\n  allowedFileTypes = ['image/*', '.pdf', '.doc', '.docx', '.txt'],\n  maxFileSize = 10 * 1024 * 1024, // 10MB\n  className\n}) => {\n  const [message, setMessage] = useState('');\n  const [isUploading, setIsUploading] = useState(false);\n  const [uploadError, setUploadError] = useState<string | null>(null);\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  // Auto-resize textarea\n  useEffect(() => {\n    if (textareaRef.current) {\n      textareaRef.current.style.height = 'auto';\n      textareaRef.current.style.height = `${Math.min(textareaRef.current.scrollHeight, 120)}px`;\n    }\n  }, [message]);\n\n  // Focus textarea when component mounts\n  useEffect(() => {\n    if (textareaRef.current && !disabled) {\n      textareaRef.current.focus();\n    }\n  }, [disabled]);\n\n  const handleSendMessage = () => {\n    const trimmedMessage = message.trim();\n    if (!trimmedMessage || disabled) return;\n\n    onSendMessage(trimmedMessage, 'text');\n    setMessage('');\n    setUploadError(null);\n    \n    // Reset textarea height\n    if (textareaRef.current) {\n      textareaRef.current.style.height = 'auto';\n    }\n  };\n\n  const handleKeyDown = (event: React.KeyboardEvent) => {\n    if (event.key === 'Enter' && !event.shiftKey) {\n      event.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  const handleFileSelect = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    const files = Array.from(event.target.files || []);\n    if (files.length === 0) return;\n\n    setUploadError(null);\n    setIsUploading(true);\n\n    try {\n      // Validate files\n      const validFiles: File[] = [];\n      const errors: string[] = [];\n\n      for (const file of files) {\n        // Check file size\n        if (file.size > maxFileSize) {\n          errors.push(`${file.name}: ไฟล์ใหญ่เกินไป (สูงสุด ${formatFileSize(maxFileSize)})`);\n          continue;\n        }\n\n        // Check file type\n        const isValidType = allowedFileTypes.some(type => {\n          if (type.startsWith('.')) {\n            return file.name.toLowerCase().endsWith(type.toLowerCase());\n          } else if (type.includes('/*')) {\n            const mimePrefix = type.split('/')[0];\n            return file.type.startsWith(mimePrefix);\n          } else {\n            return file.type === type;\n          }\n        });\n\n        if (!isValidType) {\n          errors.push(`${file.name}: ประเภทไฟล์ไม่รองรับ`);\n          continue;\n        }\n\n        validFiles.push(file);\n      }\n\n      if (errors.length > 0) {\n        setUploadError(errors.join('\\n'));\n      }\n\n      if (validFiles.length > 0) {\n        await onFileUpload(validFiles);\n      }\n    } catch (error) {\n      setUploadError('เกิดข้อผิดพลาดในการอัปโหลดไฟล์');\n    } finally {\n      setIsUploading(false);\n      // Reset file input\n      if (fileInputRef.current) {\n        fileInputRef.current.value = '';\n      }\n    }\n  };\n\n  const handleFileButtonClick = () => {\n    if (fileInputRef.current) {\n      fileInputRef.current.click();\n    }\n  };\n\n  const canSend = message.trim().length > 0 && !disabled && !isUploading;\n\n  return (\n    <div className={cn('border-t border-gray-200 bg-white', className)}>\n      {/* Upload error */}\n      {uploadError && (\n        <div className=\"px-4 py-2 bg-red-50 border-b border-red-200\">\n          <div className=\"flex items-start gap-2\">\n            <svg className=\"w-4 h-4 text-red-500 mt-0.5 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n            </svg>\n            <div className=\"flex-1\">\n              <p className=\"text-sm text-red-800 whitespace-pre-line\">\n                {uploadError}\n              </p>\n              <button\n                onClick={() => setUploadError(null)}\n                className=\"text-xs text-red-600 hover:text-red-800 underline mt-1\"\n              >\n                ปิด\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Input area */}\n      <div className=\"p-4\">\n        <div className=\"flex items-end gap-2\">\n          {/* File upload button */}\n          {allowFileUpload && (\n            <>\n              <button\n                type=\"button\"\n                onClick={handleFileButtonClick}\n                disabled={disabled || isUploading}\n                className={cn(\n                  'flex-shrink-0 p-2 rounded-lg transition-colors',\n                  'text-gray-500 hover:text-gray-700 hover:bg-gray-100',\n                  'focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2',\n                  'disabled:opacity-50 disabled:cursor-not-allowed',\n                  isUploading && 'animate-pulse'\n                )}\n                aria-label=\"แนบไฟล์\"\n              >\n                {isUploading ? (\n                  <div className=\"w-5 h-5 border-2 border-gray-400 border-t-transparent rounded-full animate-spin\" />\n                ) : (\n                  <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15.172 7l-6.586 6.586a2 2 0 102.828 2.828l6.414-6.586a4 4 0 00-5.656-5.656l-6.415 6.585a6 6 0 108.486 8.486L20.5 13\" />\n                  </svg>\n                )}\n              </button>\n              \n              <input\n                ref={fileInputRef}\n                type=\"file\"\n                multiple\n                accept={allowedFileTypes.join(',')}\n                onChange={handleFileSelect}\n                className=\"hidden\"\n                aria-label=\"เลือกไฟล์สำหรับอัปโหลด\"\n              />\n            </>\n          )}\n\n          {/* Text input */}\n          <div className=\"flex-1 relative\">\n            <textarea\n              ref={textareaRef}\n              value={message}\n              onChange={(e) => setMessage(e.target.value)}\n              onKeyDown={handleKeyDown}\n              placeholder={placeholder}\n              disabled={disabled}\n              maxLength={maxLength}\n              rows={1}\n              className={cn(\n                'w-full px-4 py-2 pr-12',\n                'border border-gray-300 rounded-lg',\n                'resize-none overflow-hidden',\n                'focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent',\n                'disabled:bg-gray-50 disabled:text-gray-500 disabled:cursor-not-allowed',\n                'placeholder:text-gray-400'\n              )}\n              style={{ minHeight: '40px', maxHeight: '120px' }}\n              aria-label=\"ข้อความ\"\n            />\n            \n            {/* Character count */}\n            {message.length > maxLength * 0.8 && (\n              <div className=\"absolute bottom-1 right-12 text-xs text-gray-400\">\n                {message.length}/{maxLength}\n              </div>\n            )}\n          </div>\n\n          {/* Send button */}\n          <button\n            type=\"button\"\n            onClick={handleSendMessage}\n            disabled={!canSend}\n            className={cn(\n              'flex-shrink-0 p-2 rounded-lg transition-all duration-200',\n              'focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2',\n              \n              canSend\n                ? 'bg-blue-600 text-white hover:bg-blue-700 active:scale-95'\n                : 'bg-gray-100 text-gray-400 cursor-not-allowed'\n            )}\n            aria-label=\"ส่งข้อความ\"\n          >\n            <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 19l9 2-9-18-9 18 9-2zm0 0v-8\" />\n            </svg>\n          </button>\n        </div>\n\n        {/* Keyboard shortcut hint */}\n        <div className=\"mt-2 text-xs text-gray-400 text-center\">\n          กด Enter เพื่อส่ง, Shift+Enter เพื่อขึ้นบรรทัดใหม่\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Helper function\nfunction formatFileSize(bytes: number): string {\n  if (bytes === 0) return '0 Bytes';\n  \n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  \n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n}\n\nexport { MessageInput };\n