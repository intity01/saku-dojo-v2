// Chat Header Component\n// Header with title, connection status, and channel controls\n\nimport React from 'react';\nimport { cn } from '../../utils/cn';\nimport type { ChannelType } from '../../types/chat';\n\nexport interface ChatHeaderProps {\n  title: string;\n  subtitle?: string;\n  isConnected: boolean;\n  onClose: () => void;\n  onToggleChannels: () => void;\n  selectedChannels: ChannelType[];\n  className?: string;\n}\n\nconst ChatHeader: React.FC<ChatHeaderProps> = ({\n  title,\n  subtitle,\n  isConnected,\n  onClose,\n  onToggleChannels,\n  selectedChannels,\n  className\n}) => {\n  const getChannelIcon = (channel: ChannelType) => {\n    switch (channel) {\n      case 'app':\n        return (\n          <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 18h.01M8 21h8a2 2 0 002-2V5a2 2 0 00-2-2H8a2 2 0 00-2 2v14a2 2 0 002 2z\" />\n          </svg>\n        );\n      case 'email':\n        return (\n          <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\n          </svg>\n        );\n      case 'telegram':\n        return (\n          <svg className=\"w-3 h-3\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path d=\"M11.944 0A12 12 0 0 0 0 12a12 12 0 0 0 12 12 12 12 0 0 0 12-12A12 12 0 0 0 12 0a12 12 0 0 0-.056 0zm4.962 7.224c.1-.002.321.023.465.14a.506.506 0 0 1 .171.325c.016.093.036.306.02.472-.18 1.898-.962 6.502-1.36 8.627-.168.9-.499 1.201-.82 1.23-.696.065-1.225-.46-1.9-.902-1.056-.693-1.653-1.124-2.678-1.8-1.185-.78-.417-1.21.258-1.91.177-.184 3.247-2.977 3.307-3.23.007-.032.014-.15-.056-.212s-.174-.041-.249-.024c-.106.024-1.793 1.14-5.061 3.345-.48.33-.913.49-1.302.48-.428-.008-1.252-.241-1.865-.44-.752-.245-1.349-.374-1.297-.789.027-.216.325-.437.893-.663 3.498-1.524 5.83-2.529 6.998-3.014 3.332-1.386 4.025-1.627 4.476-1.635z\"/>\n          </svg>\n        );\n      case 'messenger':\n        return (\n          <svg className=\"w-3 h-3\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path d=\"M12 0C5.373 0 0 4.975 0 11.111c0 3.497 1.745 6.616 4.472 8.652V24l4.086-2.242c1.09.301 2.246.464 3.442.464 6.627 0 12-4.974 12-11.111C24 4.975 18.627 0 12 0zm1.193 14.963l-3.056-3.259-5.963 3.259L10.732 8.1l3.13 3.259L19.752 8.1l-6.559 6.863z\"/>\n          </svg>\n        );\n      default:\n        return (\n          <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1\" />\n          </svg>\n        );\n    }\n  };\n\n  return (\n    <div className={cn(\n      'flex items-center justify-between',\n      'px-4 py-3 border-b border-gray-200 bg-white',\n      className\n    )}>\n      {/* Title and status */}\n      <div className=\"flex-1 min-w-0\">\n        <div className=\"flex items-center gap-2\">\n          <h2 \n            id=\"chat-drawer-title\" \n            className=\"text-lg font-semibold text-gray-900 truncate\"\n          >\n            {title}\n          </h2>\n          \n          {/* Connection status */}\n          <div className={cn(\n            'flex items-center gap-1',\n            isConnected ? 'text-green-600' : 'text-red-500'\n          )}>\n            <div className={cn(\n              'w-2 h-2 rounded-full',\n              isConnected ? 'bg-green-500' : 'bg-red-500 animate-pulse'\n            )} />\n            <span className=\"text-xs font-medium\">\n              {isConnected ? 'เชื่อมต่อแล้ว' : 'ไม่ได้เชื่อมต่อ'}\n            </span>\n          </div>\n        </div>\n        \n        {subtitle && (\n          <p \n            id=\"chat-drawer-description\" \n            className=\"text-sm text-gray-600 mt-0.5 truncate\"\n          >\n            {subtitle}\n          </p>\n        )}\n        \n        {/* Selected channels */}\n        {selectedChannels.length > 0 && (\n          <div className=\"flex items-center gap-1 mt-1\">\n            <span className=\"text-xs text-gray-500\">ส่งไปยัง:</span>\n            <div className=\"flex items-center gap-1\">\n              {selectedChannels.slice(0, 3).map((channel, index) => (\n                <div\n                  key={channel}\n                  className=\"flex items-center justify-center w-4 h-4 bg-gray-100 rounded text-gray-600\"\n                  title={channel}\n                >\n                  {getChannelIcon(channel)}\n                </div>\n              ))}\n              {selectedChannels.length > 3 && (\n                <span className=\"text-xs text-gray-500 ml-1\">\n                  +{selectedChannels.length - 3}\n                </span>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Actions */}\n      <div className=\"flex items-center gap-1 ml-4\">\n        {/* Channel selector button */}\n        <button\n          onClick={onToggleChannels}\n          className={cn(\n            'p-2 rounded-lg transition-colors',\n            'text-gray-500 hover:text-gray-700 hover:bg-gray-100',\n            'focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2'\n          )}\n          aria-label=\"เลือกช่องทางการติดต่อ\"\n          title=\"เลือกช่องทางการติดต่อ\"\n        >\n          <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\" />\n          </svg>\n          \n          {/* Channel count badge */}\n          {selectedChannels.length > 1 && (\n            <span className=\"absolute -top-1 -right-1 inline-flex items-center justify-center w-4 h-4 text-xs font-bold text-white bg-blue-500 rounded-full\">\n              {selectedChannels.length}\n            </span>\n          )}\n        </button>\n\n        {/* Close button */}\n        <button\n          onClick={onClose}\n          className={cn(\n            'p-2 rounded-lg transition-colors',\n            'text-gray-500 hover:text-gray-700 hover:bg-gray-100',\n            'focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2'\n          )}\n          aria-label=\"ปิดแชท\"\n        >\n          <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n          </svg>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport { ChatHeader };\n