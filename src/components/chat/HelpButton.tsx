// Help Button Component\n// Floating help button with notification badge\n\nimport React from 'react';\nimport { cn } from '../../utils/cn';\n\nexport interface HelpButtonProps {\n  onClick: () => void;\n  unreadCount?: number;\n  isOpen?: boolean;\n  position?: 'bottom-right' | 'bottom-left' | 'bottom-center';\n  className?: string;\n  disabled?: boolean;\n}\n\nconst HelpButton: React.FC<HelpButtonProps> = ({\n  onClick,\n  unreadCount = 0,\n  isOpen = false,\n  position = 'bottom-right',\n  className,\n  disabled = false\n}) => {\n  const positionClasses = {\n    'bottom-right': 'bottom-4 right-4 md:bottom-6 md:right-6',\n    'bottom-left': 'bottom-4 left-4 md:bottom-6 md:left-6',\n    'bottom-center': 'bottom-4 left-1/2 transform -translate-x-1/2 md:bottom-6'\n  };\n\n  // On mobile, position above TabBar (assuming 64px height)\n  const mobilePositionClasses = {\n    'bottom-right': 'bottom-20 right-4 md:bottom-6 md:right-6',\n    'bottom-left': 'bottom-20 left-4 md:bottom-6 md:left-6',\n    'bottom-center': 'bottom-20 left-1/2 transform -translate-x-1/2 md:bottom-6'\n  };\n\n  return (\n    <>\n      {/* Desktop/Tablet Position */}\n      <button\n        onClick={onClick}\n        disabled={disabled}\n        className={cn(\n          // Base styles\n          'fixed z-50 hidden md:flex',\n          'items-center justify-center',\n          'w-14 h-14 rounded-full',\n          'bg-blue-600 text-white shadow-lg',\n          'transition-all duration-200 ease-in-out',\n          \n          // Hover and focus states\n          'hover:bg-blue-700 hover:shadow-xl hover:scale-105',\n          'focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2',\n          'active:scale-95',\n          \n          // Disabled state\n          'disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:scale-100',\n          \n          // Position\n          positionClasses[position],\n          \n          // Open state\n          isOpen && 'bg-blue-700 shadow-xl',\n          \n          className\n        )}\n        aria-label={`${isOpen ? 'Close' : 'Open'} help chat${unreadCount > 0 ? ` (${unreadCount} unread)` : ''}`}\n        aria-expanded={isOpen}\n      >\n        {/* Chat Icon */}\n        <div className=\"relative\">\n          {isOpen ? (\n            // Close icon when open\n            <svg\n              className=\"w-6 h-6 transition-transform duration-200\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n              aria-hidden=\"true\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M6 18L18 6M6 6l12 12\"\n              />\n            </svg>\n          ) : (\n            // Chat icon when closed\n            <svg\n              className=\"w-6 h-6 transition-transform duration-200\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n              aria-hidden=\"true\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\"\n              />\n            </svg>\n          )}\n          \n          {/* Unread badge */}\n          {unreadCount > 0 && (\n            <span\n              className={cn(\n                'absolute -top-2 -right-2',\n                'inline-flex items-center justify-center',\n                'min-w-[20px] h-5 px-1',\n                'text-xs font-bold text-white',\n                'bg-red-500 rounded-full',\n                'animate-pulse'\n              )}\n              aria-label={`${unreadCount} unread messages`}\n            >\n              {unreadCount > 99 ? '99+' : unreadCount}\n            </span>\n          )}\n        </div>\n      </button>\n\n      {/* Mobile Position (above TabBar) */}\n      <button\n        onClick={onClick}\n        disabled={disabled}\n        className={cn(\n          // Base styles\n          'fixed z-50 flex md:hidden',\n          'items-center justify-center',\n          'w-12 h-12 rounded-full',\n          'bg-blue-600 text-white shadow-lg',\n          'transition-all duration-200 ease-in-out',\n          \n          // Hover and focus states\n          'active:bg-blue-700 active:shadow-xl active:scale-95',\n          'focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2',\n          \n          // Disabled state\n          'disabled:opacity-50 disabled:cursor-not-allowed',\n          \n          // Mobile position (above TabBar)\n          mobilePositionClasses[position],\n          \n          // Open state\n          isOpen && 'bg-blue-700 shadow-xl',\n          \n          className\n        )}\n        aria-label={`${isOpen ? 'Close' : 'Open'} help chat${unreadCount > 0 ? ` (${unreadCount} unread)` : ''}`}\n        aria-expanded={isOpen}\n      >\n        {/* Chat Icon - smaller for mobile */}\n        <div className=\"relative\">\n          {isOpen ? (\n            <svg\n              className=\"w-5 h-5 transition-transform duration-200\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n              aria-hidden=\"true\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M6 18L18 6M6 6l12 12\"\n              />\n            </svg>\n          ) : (\n            <svg\n              className=\"w-5 h-5 transition-transform duration-200\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n              aria-hidden=\"true\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\"\n              />\n            </svg>\n          )}\n          \n          {/* Unread badge - smaller for mobile */}\n          {unreadCount > 0 && (\n            <span\n              className={cn(\n                'absolute -top-1 -right-1',\n                'inline-flex items-center justify-center',\n                'min-w-[16px] h-4 px-1',\n                'text-xs font-bold text-white',\n                'bg-red-500 rounded-full',\n                'animate-pulse'\n              )}\n              aria-label={`${unreadCount} unread messages`}\n            >\n              {unreadCount > 9 ? '9+' : unreadCount}\n            </span>\n          )}\n        </div>\n      </button>\n    </>\n  );\n};\n\n// Pulse animation for new messages\nexport const HelpButtonPulse: React.FC<{ show: boolean }> = ({ show }) => {\n  if (!show) return null;\n  \n  return (\n    <div className=\"fixed bottom-4 right-4 md:bottom-6 md:right-6 z-40\">\n      <div className=\"w-14 h-14 rounded-full bg-blue-400 animate-ping opacity-75\" />\n    </div>\n  );\n};\n\nexport { HelpButton };\n