// AppBar Component - Light Theme Specification\n// 64px desktop / 56px mobile height with proper accessibility\n\nimport React from 'react';\nimport { cn } from '../../utils/cn';\nimport { Button, IconButton } from './Button';\n\nexport interface AppBarProps {\n  title?: string;\n  subtitle?: string;\n  leading?: React.ReactNode;\n  actions?: React.ReactNode;\n  className?: string;\n  variant?: 'default' | 'elevated' | 'transparent';\n  sticky?: boolean;\n}\n\nconst AppBar: React.FC<AppBarProps> = ({\n  title,\n  subtitle,\n  leading,\n  actions,\n  className,\n  variant = 'default',\n  sticky = true\n}) => {\n  const baseClasses = [\n    // Layout\n    'flex items-center justify-between',\n    'px-4 md:px-6',\n    'h-14 md:h-16', // 56px mobile / 64px desktop\n    'w-full',\n    \n    // Positioning\n    sticky && 'sticky top-0 z-50',\n    \n    // Typography\n    'text-gray-900',\n    \n    // Transitions\n    'transition-all duration-200'\n  ];\n\n  const variantClasses = {\n    default: [\n      'bg-white',\n      'border-b border-gray-200'\n    ],\n    elevated: [\n      'bg-white',\n      'shadow-sm',\n      'border-b border-gray-100'\n    ],\n    transparent: [\n      'bg-transparent'\n    ]\n  };\n\n  return (\n    <header\n      className={cn(\n        baseClasses,\n        variantClasses[variant],\n        className\n      )}\n      role=\"banner\"\n    >\n      {/* Leading section */}\n      <div className=\"flex items-center gap-3 min-w-0 flex-1\">\n        {leading && (\n          <div className=\"flex-shrink-0\">\n            {leading}\n          </div>\n        )}\n        \n        {/* Title section */}\n        <div className=\"min-w-0 flex-1\">\n          {title && (\n            <h1 className=\"text-lg md:text-xl font-bold text-gray-900 truncate\">\n              {title}\n            </h1>\n          )}\n          {subtitle && (\n            <p className=\"text-sm text-gray-600 truncate mt-0.5\">\n              {subtitle}\n            </p>\n          )}\n        </div>\n      </div>\n\n      {/* Actions section */}\n      {actions && (\n        <div className=\"flex items-center gap-2 flex-shrink-0 ml-4\">\n          {actions}\n        </div>\n      )}\n    </header>\n  );\n};\n\n// Menu Button for mobile navigation\nexport interface MenuButtonProps {\n  isOpen?: boolean;\n  onClick?: () => void;\n  'aria-label'?: string;\n}\n\nexport const MenuButton: React.FC<MenuButtonProps> = ({\n  isOpen = false,\n  onClick,\n  'aria-label': ariaLabel = 'Toggle menu'\n}) => {\n  return (\n    <IconButton\n      variant=\"ghost\"\n      size=\"md\"\n      onClick={onClick}\n      aria-label={ariaLabel}\n      aria-expanded={isOpen}\n      icon={\n        <svg\n          className=\"h-5 w-5\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          viewBox=\"0 0 24 24\"\n          aria-hidden=\"true\"\n        >\n          {isOpen ? (\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M6 18L18 6M6 6l12 12\"\n            />\n          ) : (\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M4 6h16M4 12h16M4 18h16\"\n            />\n          )}\n        </svg>\n      }\n    />\n  );\n};\n\n// Back Button for navigation\nexport interface BackButtonProps {\n  onClick?: () => void;\n  'aria-label'?: string;\n}\n\nexport const BackButton: React.FC<BackButtonProps> = ({\n  onClick,\n  'aria-label': ariaLabel = 'Go back'\n}) => {\n  return (\n    <IconButton\n      variant=\"ghost\"\n      size=\"md\"\n      onClick={onClick}\n      aria-label={ariaLabel}\n      icon={\n        <svg\n          className=\"h-5 w-5\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          viewBox=\"0 0 24 24\"\n          aria-hidden=\"true\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={2}\n            d=\"M15 19l-7-7 7-7\"\n          />\n        </svg>\n      }\n    />\n  );\n};\n\n// Add Button for quick actions\nexport interface AddButtonProps {\n  onClick?: () => void;\n  'aria-label'?: string;\n}\n\nexport const AddButton: React.FC<AddButtonProps> = ({\n  onClick,\n  'aria-label': ariaLabel = 'Add new item'\n}) => {\n  return (\n    <IconButton\n      variant=\"primary\"\n      size=\"md\"\n      onClick={onClick}\n      aria-label={ariaLabel}\n      icon={\n        <svg\n          className=\"h-5 w-5\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          viewBox=\"0 0 24 24\"\n          aria-hidden=\"true\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={2}\n            d=\"M12 4v16m8-8H4\"\n          />\n        </svg>\n      }\n    />\n  );\n};\n\n// More Actions Button\nexport interface MoreButtonProps {\n  onClick?: () => void;\n  'aria-label'?: string;\n}\n\nexport const MoreButton: React.FC<MoreButtonProps> = ({\n  onClick,\n  'aria-label': ariaLabel = 'More options'\n}) => {\n  return (\n    <IconButton\n      variant=\"ghost\"\n      size=\"md\"\n      onClick={onClick}\n      aria-label={ariaLabel}\n      icon={\n        <svg\n          className=\"h-5 w-5\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          viewBox=\"0 0 24 24\"\n          aria-hidden=\"true\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={2}\n            d=\"M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z\"\n          />\n        </svg>\n      }\n    />\n  );\n};\n\nexport { AppBar };\n