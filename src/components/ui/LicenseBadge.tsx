// License Badge Component\n// Proper attribution display for open source content\n\nimport React from 'react';\nimport { cn } from '../../utils/cn';\n\nexport interface LicenseBadgeProps {\n  license: 'CC-BY' | 'CC-BY-SA' | 'CC-BY-NC' | 'CC-BY-NC-SA' | 'EDRDG' | 'Public-Domain' | 'Other';\n  source?: {\n    name: string;\n    url?: string;\n    attribution: string;\n  };\n  size?: 'sm' | 'md' | 'lg';\n  variant?: 'default' | 'minimal' | 'detailed';\n  className?: string;\n  onClick?: () => void;\n}\n\nconst LicenseBadge: React.FC<LicenseBadgeProps> = ({\n  license,\n  source,\n  size = 'md',\n  variant = 'default',\n  className,\n  onClick\n}) => {\n  const licenseInfo = {\n    'CC-BY': {\n      name: 'Creative Commons Attribution',\n      color: 'bg-emerald-100 text-emerald-800 border-emerald-200',\n      icon: 'üÖ≠',\n      url: 'https://creativecommons.org/licenses/by/4.0/'\n    },\n    'CC-BY-SA': {\n      name: 'Creative Commons Attribution-ShareAlike',\n      color: 'bg-emerald-100 text-emerald-800 border-emerald-200',\n      icon: 'üÖ≠üÑé',\n      url: 'https://creativecommons.org/licenses/by-sa/4.0/'\n    },\n    'CC-BY-NC': {\n      name: 'Creative Commons Attribution-NonCommercial',\n      color: 'bg-yellow-100 text-yellow-800 border-yellow-200',\n      icon: 'üÖ≠üÑç',\n      url: 'https://creativecommons.org/licenses/by-nc/4.0/'\n    },\n    'CC-BY-NC-SA': {\n      name: 'Creative Commons Attribution-NonCommercial-ShareAlike',\n      color: 'bg-yellow-100 text-yellow-800 border-yellow-200',\n      icon: 'üÖ≠üÑçüÑé',\n      url: 'https://creativecommons.org/licenses/by-nc-sa/4.0/'\n    },\n    'EDRDG': {\n      name: 'Electronic Dictionary Research and Development Group',\n      color: 'bg-blue-100 text-blue-800 border-blue-200',\n      icon: 'üìö',\n      url: 'https://www.edrdg.org/edrdg/licence.html'\n    },\n    'Public-Domain': {\n      name: 'Public Domain',\n      color: 'bg-gray-100 text-gray-800 border-gray-200',\n      icon: 'üÖÆ',\n      url: 'https://creativecommons.org/publicdomain/'\n    },\n    'Other': {\n      name: 'Other License',\n      color: 'bg-gray-100 text-gray-800 border-gray-200',\n      icon: 'üìÑ',\n      url: undefined\n    }\n  };\n\n  const info = licenseInfo[license];\n  \n  const sizeClasses = {\n    sm: 'text-xs px-1.5 py-0.5',\n    md: 'text-sm px-2 py-1',\n    lg: 'text-base px-3 py-1.5'\n  };\n\n  const baseClasses = [\n    'inline-flex items-center gap-1.5',\n    'font-medium rounded-md border',\n    'transition-all duration-200',\n    onClick && 'cursor-pointer hover:shadow-sm'\n  ];\n\n  if (variant === 'minimal') {\n    return (\n      <span\n        className={cn(\n          baseClasses,\n          sizeClasses[size],\n          info.color,\n          className\n        )}\n        title={`${info.name}${source ? ` - ${source.attribution}` : ''}`}\n        onClick={onClick}\n        role={onClick ? 'button' : undefined}\n        tabIndex={onClick ? 0 : undefined}\n        onKeyDown={(e) => {\n          if (onClick && (e.key === 'Enter' || e.key === ' ')) {\n            e.preventDefault();\n            onClick();\n          }\n        }}\n      >\n        <span aria-hidden=\"true\">{info.icon}</span>\n        <span>{license}</span>\n      </span>\n    );\n  }\n\n  if (variant === 'detailed') {\n    return (\n      <div\n        className={cn(\n          'inline-flex flex-col gap-1 p-3 rounded-lg border',\n          info.color,\n          onClick && 'cursor-pointer hover:shadow-sm',\n          className\n        )}\n        onClick={onClick}\n        role={onClick ? 'button' : undefined}\n        tabIndex={onClick ? 0 : undefined}\n        onKeyDown={(e) => {\n          if (onClick && (e.key === 'Enter' || e.key === ' ')) {\n            e.preventDefault();\n            onClick();\n          }\n        }}\n      >\n        <div className=\"flex items-center gap-2\">\n          <span className=\"text-lg\" aria-hidden=\"true\">{info.icon}</span>\n          <span className=\"font-semibold\">{license}</span>\n        </div>\n        \n        <p className=\"text-xs opacity-90\">\n          {info.name}\n        </p>\n        \n        {source && (\n          <div className=\"text-xs opacity-80 mt-1\">\n            <p className=\"font-medium\">{source.name}</p>\n            <p className=\"mt-0.5\">{source.attribution}</p>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  // Default variant\n  return (\n    <span\n      className={cn(\n        baseClasses,\n        sizeClasses[size],\n        info.color,\n        className\n      )}\n      title={`${info.name}${source ? ` - ${source.attribution}` : ''}`}\n      onClick={onClick}\n      role={onClick ? 'button' : undefined}\n      tabIndex={onClick ? 0 : undefined}\n      onKeyDown={(e) => {\n        if (onClick && (e.key === 'Enter' || e.key === ' ')) {\n          e.preventDefault();\n          onClick();\n        }\n      }}\n    >\n      <span aria-hidden=\"true\">{info.icon}</span>\n      <span>{license}</span>\n      {source && (\n        <span className=\"opacity-75\">‚Ä¢ {source.name}</span>\n      )}\n    </span>\n  );\n};\n\n// License Modal for detailed attribution\nexport interface LicenseModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  license: LicenseBadgeProps['license'];\n  source?: LicenseBadgeProps['source'];\n}\n\nexport const LicenseModal: React.FC<LicenseModalProps> = ({\n  isOpen,\n  onClose,\n  license,\n  source\n}) => {\n  const licenseInfo = {\n    'CC-BY': {\n      name: 'Creative Commons Attribution 4.0 International',\n      description: 'You are free to share and adapt this material for any purpose, even commercially, as long as you give appropriate credit.',\n      requirements: ['Attribution required'],\n      url: 'https://creativecommons.org/licenses/by/4.0/'\n    },\n    'CC-BY-SA': {\n      name: 'Creative Commons Attribution-ShareAlike 4.0 International',\n      description: 'You are free to share and adapt this material for any purpose, even commercially, as long as you give appropriate credit and distribute under the same license.',\n      requirements: ['Attribution required', 'Share under same license'],\n      url: 'https://creativecommons.org/licenses/by-sa/4.0/'\n    },\n    'CC-BY-NC': {\n      name: 'Creative Commons Attribution-NonCommercial 4.0 International',\n      description: 'You are free to share and adapt this material for non-commercial purposes only, as long as you give appropriate credit.',\n      requirements: ['Attribution required', 'Non-commercial use only'],\n      url: 'https://creativecommons.org/licenses/by-nc/4.0/'\n    },\n    'CC-BY-NC-SA': {\n      name: 'Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International',\n      description: 'You are free to share and adapt this material for non-commercial purposes only, as long as you give appropriate credit and distribute under the same license.',\n      requirements: ['Attribution required', 'Non-commercial use only', 'Share under same license'],\n      url: 'https://creativecommons.org/licenses/by-nc-sa/4.0/'\n    },\n    'EDRDG': {\n      name: 'Electronic Dictionary Research and Development Group License',\n      description: 'This material is made available under the EDRDG license for educational and research purposes.',\n      requirements: ['Attribution required', 'Educational/research use'],\n      url: 'https://www.edrdg.org/edrdg/licence.html'\n    },\n    'Public-Domain': {\n      name: 'Public Domain',\n      description: 'This material is in the public domain and can be used freely without restrictions.',\n      requirements: ['No restrictions'],\n      url: 'https://creativecommons.org/publicdomain/'\n    },\n    'Other': {\n      name: 'Other License',\n      description: 'This material is available under a specific license. Please check the source for details.',\n      requirements: ['Check source for requirements'],\n      url: undefined\n    }\n  };\n\n  const info = licenseInfo[license];\n\n  if (!isOpen) return null;\n\n  return (\n    <div\n      className=\"fixed inset-0 z-50 flex items-center justify-center p-4 bg-black bg-opacity-50\"\n      onClick={onClose}\n      role=\"dialog\"\n      aria-modal=\"true\"\n      aria-labelledby=\"license-modal-title\"\n    >\n      <div\n        className=\"bg-white rounded-2xl p-6 max-w-md w-full max-h-[80vh] overflow-y-auto\"\n        onClick={(e) => e.stopPropagation()}\n      >\n        <div className=\"flex items-start justify-between mb-4\">\n          <h2 id=\"license-modal-title\" className=\"text-lg font-semibold text-gray-900\">\n            License Information\n          </h2>\n          <button\n            onClick={onClose}\n            className=\"text-gray-400 hover:text-gray-600 p-1\"\n            aria-label=\"Close modal\"\n          >\n            <svg className=\"h-5 w-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n          </button>\n        </div>\n\n        <div className=\"space-y-4\">\n          <LicenseBadge license={license} source={source} variant=\"detailed\" />\n          \n          <div>\n            <h3 className=\"font-medium text-gray-900 mb-2\">{info.name}</h3>\n            <p className=\"text-sm text-gray-600 mb-3\">{info.description}</p>\n            \n            <div className=\"mb-3\">\n              <h4 className=\"font-medium text-gray-900 mb-1\">Requirements:</h4>\n              <ul className=\"text-sm text-gray-600 space-y-1\">\n                {info.requirements.map((req, index) => (\n                  <li key={index} className=\"flex items-center gap-2\">\n                    <span className=\"w-1.5 h-1.5 bg-gray-400 rounded-full\" />\n                    {req}\n                  </li>\n                ))}\n              </ul>\n            </div>\n            \n            {source && (\n              <div className=\"mb-3\">\n                <h4 className=\"font-medium text-gray-900 mb-1\">Source:</h4>\n                <p className=\"text-sm text-gray-600\">{source.attribution}</p>\n                {source.url && (\n                  <a\n                    href={source.url}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className=\"text-sm text-blue-600 hover:text-blue-800 underline\"\n                  >\n                    Visit source\n                  </a>\n                )}\n              </div>\n            )}\n            \n            {info.url && (\n              <a\n                href={info.url}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"inline-flex items-center gap-1 text-sm text-blue-600 hover:text-blue-800 underline\"\n              >\n                View full license\n                <svg className=\"h-3 w-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\" />\n                </svg>\n              </a>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport { LicenseBadge };\n